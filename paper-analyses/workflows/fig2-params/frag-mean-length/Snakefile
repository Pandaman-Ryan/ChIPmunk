# Import most functionality from top level snakefile
# Here we just define the parameters that change and generate the params files
#
# Simulated Peak files to use for evaluation
#/storage/pandaman/project/ChIPs-experiments/data/TF-SP1-sim.bed
#/storage/pandaman/project/ChIPs-experiments/data/HM-H3K27ac-sim.bed

config["REF"] = "/storage/resources/dbase/human/hg19/hg19.fa"
config["REGION"] = "chr21:1-48129895"
config["ENCODE"] = ""
config["ENCDIR"] = ""
config["C"] = 4

include: "../../Snakefile"

FRAGMEANLEN_WRITE = ["10_14", "21_10", "40_7", "90_4", "200_3", "400_2"]
# Mean = a*b, var=a*b^2

rule all:
    input:
        "{outprefix}.summary_stats_fragmeanlen.tab".format(outprefix=config["OUTPREFIX"])

rule create_params_file:
    output:
        "params/" + config["OUTPREFIX"] + "-fragmeanlen{fragmeanlen,[\d_]+}.params"
    shell:
        "echo --scale-outliers -c {config[C]} --numcopies 100 --numreads 100000  --readlen 36 --gamma-frag {wildcards.fragmeanlen} | sed 's/_/,/' > {output}"

rule summarize_all:
    input:
        expand("metrics/"+config["OUTPREFIX"]+"-fragmeanlen{fragmeanlen}.final.tab", fragmeanlen=FRAGMEANLEN_WRITE)
    output:
        "{outprefix}.summary_stats_fragmeanlen.tab".format(outprefix=config["OUTPREFIX"])
    run:
       shell("head -n 1 {input[0]} | awk '{{print \"fragmeanlen\\t\" $0}}' >> {output}")
       for fm in FRAGMEANLEN_WRITE:
           shell("tail -n 1 metrics/{config[OUTPREFIX]}-fragmeanlen%s.final.tab | awk '{{print \"%s\\t\" $0}}' >> {output}"%(fm, fm))
