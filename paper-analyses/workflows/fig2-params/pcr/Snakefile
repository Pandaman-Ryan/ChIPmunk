# Import most functionality from top level snakefile
# Here we just define the parameters that change and generate the params files
#
# Simulated Peak files to use for evaluation
#/storage/pandaman/project/ChIPs-experiments/data/TF-SP1-sim.bed
#/storage/pandaman/project/ChIPs-experiments/data/HM-H3K27ac-sim.bed

config["REF"] = "/storage/resources/dbase/human/hg19/hg19.fa"
config["ENCODE"] = ""
config["ENCDIR"] = ""
config["REGION"] = "chr21:1-48129895"
config["C"] = 4

include: "../../Snakefile

PCR = [0.50, 0.625, 0.75, 0.875, 1.0]

rule all:
    input:
        "{outprefix}.summary_stats_pcr.tab".format(outprefix=config["OUTPREFIX"])

rule create_params_file:
    output:
        "params/" + config["OUTPREFIX"] + "-pcr.{pcr,[\d.]+}.params"
    shell:
        "echo --scale-outliers -c {config[C]} --numcopies 100 --numreads 100000 --readlen 36 --pcr_rate {wildcards.pcr} > {output}"

rule summarize_all:
    input:
        expand("metrics/"+config["OUTPREFIX"]+"-pcr.{pcr}.final.tab", pcr=PCR)
    output:
        "{outprefix}.summary_stats_pcr.tab".format(outprefix=config["OUTPREFIX"])
    run:
       shell("head -n 1 {input[0]} | awk '{{print \"pcr\\t\" $0}}' >> {output}")
       for pp in PCR:
           shell("tail -n 1 metrics/{config[OUTPREFIX]}-pcr.%s.final.tab | awk '{{print \"%s\\t\" $0}}' >> {output}"%(pp, pp))
